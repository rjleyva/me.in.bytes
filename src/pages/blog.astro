---
import { getCollection } from 'astro:content';
import { createMetadata } from '@/utils/metadata';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { generateBlogJsonLd } from '@/utils/json-ld';

const posts = await getCollection('posts');

const postsByYear = posts
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .reduce(
    (acc, post) => {
      const year = post.data.date.getFullYear();
      (acc[year] ||= []).push(post);
      return acc;
    },
    {} as Record<number, typeof posts>
  );

const baseMeta = createMetadata({
  pageTitle: "RJ Leyva's Blog Archive",
  pageDescription: 'Read all articles and learning logs.',
  pageURL: new URL('/blog', Astro.site).toString()
});

const metadata = {
  ...baseMeta,
  structuredData: generateBlogJsonLd(posts, baseMeta)
};
---

<BaseLayout {...metadata}>
  <section class="blog-archive" aria-labelledby="blog-archive__heading">
    <h1 id="blog-archive__heading" class="blog-archive__heading">
      Blog Archive
    </h1>
    {
      Object.entries(postsByYear)
        .sort((a, b) => Number(b[0]) - Number(a[0]))
        .map(([year, posts]) => (
          <div class="blog-archive__year-group">
            <h2 class="blog-archive__year">{year}</h2>
            <ul class="blog-archive__list" role="list">
              {posts.map(post => {
                const date = post.data.date;
                const formatted = `${date.getMonth() + 1}-${String(date.getDate()).padStart(2, '0')}-${date.getFullYear()}`;
                return (
                  <li class="blog-archive__item">
                    <article
                      class="blog-archive__post"
                      aria-labelledby={`post-title-${post.id}`}
                    >
                      <div class="blog-archive__post-header">
                        <p class="blog-archive__meta">
                          <time datetime={date.toISOString()}>{formatted}</time>
                        </p>
                        <h3
                          id={`post-title-${post.id}`}
                          class="blog-archive__post-title"
                        >
                          <a
                            class="blog-archive__post-link"
                            href={`/blog/${post.slug}/`}
                          >
                            {post.data.title}
                          </a>
                        </h3>
                      </div>
                    </article>
                  </li>
                );
              })}
            </ul>
          </div>
        ))
    }
  </section>
</BaseLayout>

<style>
  .blog-archive {
    margin: 0 auto;
    padding: 1rem;
    max-width: 30rem;
  }

  .blog-archive__heading {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  @media (min-width: 37.5rem) {
    .blog-archive__heading {
      font-size: 1.6rem;
    }
  }

  @media (min-width: 55rem) {
    .blog-archive__heading {
      font-size: 1.7rem;
    }
  }

  .blog-archive__list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    list-style-type: none;
  }

  .blog-archive__year {
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 0.5rem;
    color: var(--heading, #333);
  }

  .blog-archive__post-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }

  .blog-archive__meta {
    white-space: nowrap;
    font-size: 0.875rem;
    color: var(--subtext);
    flex-shrink: 0;
  }

  .blog-archive__post-title {
    margin: 0;
    text-align: left;
    flex: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 1rem;
  }

  @media (min-width: 37.5rem) {
    .blog-archive__post-title {
      font-size: 1.1rem;
    }
  }

  @media (min-width: 55rem) {
    .blog-archive__post-title {
      font-size: 1.2rem;
    }
  }

  .blog-archive__post-link:focus-visible {
    outline: 0.125rem solid var(--bg-hover);
    outline-offset: 0.125rem;
  }
</style>
