---
import type { PageMetadata } from '@/types';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import '../styles/tokens.css';

const { pageTitle, pageDescription, pageURL, ogDescription, structuredData } =
  Astro.props as PageMetadata;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={pageURL} />
    <meta property="og:site_name" content="RJ Leyvaâ€™s Blog" />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={ogDescription} />
    <meta name="description" content={pageDescription} />
    <link
      rel="preload"
      href="/fonts/open-sans-latin-600-normal.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/fonts/open-sans-latin-700-normal.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link rel="canonical" href={pageURL} />
    <title>{pageTitle}</title>
    {
      structuredData && (
        <script
          type="application/ld+json"
          is:inline
          set:html={JSON.stringify(structuredData)}
        />
      )
    }
  </head>

  <body>
    <div class="layout">
      <a href="#main-content" class="skip-link">Skip to main content</a>
      <Header siteLogo="Logo" />
      <main id="main-content" class="layout__main">
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

<style is:global>
  @font-face {
    font-family: 'Open Sans';
    src: url('/fonts/open-sans-latin-600-normal.woff2') format('woff2');
    font-weight: 600;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Open Sans';
    src: url('/fonts/open-sans-latin-700-normal.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'IBM Plex Mono';
    src: url('/fonts/ibm-plex-mono-latin-500-normal.woff2') format('woff2');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html,
  body {
    max-width: 100vw;
    overflow-x: hidden;
  }

  body {
    background: var(--background);
    color: var(--text);
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }

  .layout {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .layout__main {
    flex: 1;
  }

  .skip-link {
    background: var(--skip-surface);
    color: var(--skip-text);
    left: 0;
    padding: 0.5rem 1rem;
    position: absolute;
    text-decoration: none;
    transition: top 0.3s;
    top: -2.5rem;
    z-index: 100;
  }

  .skip-link:focus {
    box-shadow: none;
    outline: none;
    top: 0;
  }

  a {
    color: inherit;
    text-decoration: none;
  }

  .social-icon {
    color: var(--icon);
    display: block;
    width: 100%;
    height: 100%;
    transition: transform 0.1s ease-in-out;
  }

  .social-icon--github {
    transform-origin: center;
  }

  .social-icon--instagram {
    transform-origin: center;
  }

  .social-icon--linkedin {
    transform-origin: center;
  }

  .social-icon:hover {
    color: var(--icon-overlay);
    transform: scale(1.1) rotate(10deg);
  }

  .social-icon--linkedin:hover {
    color: var(--icon-overlay);
    transform: scale(1.1) rotate(-10deg);
  }

  .icon-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.7rem;
    height: 1.7rem;
  }

  .icon-button svg {
    display: block;
    width: 100%;
    height: 100%;
  }
</style>
